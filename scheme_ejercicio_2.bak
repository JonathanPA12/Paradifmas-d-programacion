#lang racket

(define OrdenaAparX (lambda (pos L1)
(cond
[(null? L1) '()]
[(> pos 0) (OrdenaAparX (- pos 1) (cdr L1))]
[else L1])))
(OrdenaAparX 3 (list 7 1 4 6 9 4 3 2))

;Output: '(6 9 4 3 2)
;ordenar de forma ascendente el output anterior
(define OrdenaAparX (lambda (pos L1)
(cond
[(null? L1) '()]
[(> pos 0) (OrdenaAparX (- pos 1) (cdr L1))]
[else (sort L1 <)])))
(OrdenaAparX 3 (list 7 1 4 6 9 4 3 2))

